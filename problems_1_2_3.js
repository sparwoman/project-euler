// PROJECT EULER
// Problem 1:
// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
// The sum of these multiples is 23.
// Find the sum of all the multiples of 3 or 5 below 1000.

var problemOne = function(input) {
	var sum = 0;
	for (var i = (input - 1); i > 0; i--) {
		if (i % 3 === 0 || i % 5 === 0) {
			sum += i;
		}
	};
	console.log(sum);
}

problemOne(10);
problemOne(1000);

// Problem 2:
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

var problemTwo = function(value) {
	var total = 2;
	for (a = 1, b = 2, c = 3; c <= value; a = b, b = c, c++) {
		c = a + b;
		if (c % 2 === 0) {
			total += c;
		};
	};
	console.log(total);
};

problemTwo(55);
problemTwo(4000000);

// Problem 3:
// The prime factors of 13195 are 5, 7, 13 and 29.
// What is the largest prime factor of the number 600851475143 ?


var largestPrimeFactor = function(n) {
	var primeArray = [];
	for(var i = (n-1); i > 1; i--) {
		if(n % i === 0) {
			var output = [];
			for(var j = 2; j < i; j++) {
				if(i % j === 0) {
					break;
				} else {
					output.push(j);
				};
			};
			if(output.length === (i - 2)) {
				primeArray.push(i);
			};
		};
		if(primeArray.length === 1) {
			break;
		};
	}; 
	console.log(primeArray[0]);
};

largestPrimeFactor(24);
largestPrimeFactor(13195);
